exit
params
continue
user.comments
        user_id = decoded_token[0]['user_id']
        decoded_token = JWT.decode(token, 'secret', true, { algorithm: 'HS256'})
token = request.headers[:Authorization].split(' ')[1]
user_id
user
        user = User.find(user_id)
        user_id = decoded_token[0]['user_id']
        decoded_token = JWT.decode(token, 'secret', true, { algorithm: 'HS256'})
token = request.headers[:Authorization].split(' ')[1]
comment.update!(body: params['commentBody'])
comment
comment = Comment.find(params['commentId'])
params
exit
shout.update(body: params['shoutBody'])
shout.update!
shout
shout.body = params['shoutBody']
shout = Shout.find(params['shoutId'])
params
exit
params['json']
params['body']
params
exit
params
exit
params
exit
user.shouts
shout
exit
shout
shout = Shout.find(params['id'])
params
exit
eexit
exit
EXIT
exit
user.followed_shouts.comments
user.followed_shouts
User.followed_shouts
user.comments
user.shouts.comments
user.shouts
user
exit
user
user.shouts
exit
user.shouts
continue
shout.comments
comment
exit
shout.comments
shout.comments.any?{|comment| comment.user_id === user_id}
comment
shout
comment
exit
params
exit
continue
shout
exit
params
continue
user.shouts
exit
like
exit
Like.find_by(user_id: user_id, shout_id: shout.id)
like = Like.find_by(user_id: user_id, shout_id: shout.id)
request.headers[:Authorization].split(' ')[1]
params
continue
shout.likes.any?{|like| like.user_id === user_id}
shout.likes.any?{|like| like.user_id != user_id}
shout.likes.any?{|like| like.user_id !== user_id}
shout.likes.any?{|like| like.user_id === user_id}
shout.likes
user.likes
shout.likes.include?(|like| like.user_id === user_id)
shout.likes.include?(like.user_id === user_id)
shout.likes
shout = Shout.find(params['shoutId'])
shout
continue
shout
shout.update!(likeCount: likeCount)
likeCount = shout.likeCount + 1
likeCount = shout.likeCount
shout.likeCount +1
shout.likeCount ++
shout.likeCount
shout
shout = Shout.find(params['shoutId'])
like
exit
params['shoutId']
params
continue
exit
Shout.first
exit
xit
user.followed_shouts.first.user
user.followed_shouts
user.followed_shouta
followed_shouts
user.followed
followed_users_ids
followers_users_ids
followed_users_ids
exit
user.followed_users.ids
user.followed_users
shouts
exit
shouts
continue
exit
Shout.first.user
Shout.all
params
continue
user
exit
user.shouts
user
 exit
User.first.shouts
User.first
params['id']
params
exit
params
exit
params
exit
continue
user.followed_users
all_users
exit
followed_users_ids
followed_users_id
exit
user.followed_users
user.followed_users_id
user.followed_users
user.followed_user
user
exit
params
continue
continut
continue
user
exit
params
exit
